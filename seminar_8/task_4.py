"""
–ú–æ–¥—É–ª—å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤ CSV –≤ JSON
"""
# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ4
# üìå –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –≤ –ø—Ä–æ—à–ª–æ–º –∑–∞–¥–∞–Ω–∏–∏ csv —Ñ–∞–π–ª –±–µ–∑
# –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è csv.DictReader.
# üìå –î–æ–ø–æ–ª–Ω–∏—Ç–µ id –¥–æ 10 —Ü–∏—Ñ—Ä –Ω–µ–∑–Ω–∞—á–∞—â–∏–º–∏ –Ω—É–ª—è–º–∏.
# üìå –í –∏–º–µ–Ω–∞—Ö –ø–µ—Ä–≤—É—é –±—É–∫–≤—É —Å–¥–µ–ª–∞–π—Ç–µ –ø—Ä–æ–ø–∏—Å–Ω–æ–π.
# üìå –î–æ–±–∞–≤—å—Ç–µ –ø–æ–ª–µ —Ö–µ—à –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–º–µ–Ω–∏ –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞.
# üìå –ü–æ–ª—É—á–∏–≤—à–∏–µ—Å—è –∑–∞–ø–∏—Å–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ json —Ñ–∞–π–ª, –≥–¥–µ –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞
# csv —Ñ–∞–π–ª–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π json —Å–ª–æ–≤–∞—Ä—å.
# üìå –ò–º—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
# —Ñ—É–Ω–∫—Ü–∏–∏.

__all__ = ['convert_to_json']
import json


def convert_to_json(file_csv: str, file_json: str):
    """
    –§—É–Ω–∫—Ü–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Ñ–∞–π–ª CSV –≤ JSON –¥–æ–±–∞–≤–ª—è—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ

    :param file_csv: CSV —Ñ–∞–π–ª
    :param file_json: JSON —Ñ–∞–π–ª
    :return:
    """
    with (open(file_csv, 'r', encoding='utf-8') as f_read,
          open(file_json, 'w', encoding='utf-8') as f_write):
        list_json = []
        for i, row in enumerate(f_read, 0):
            if i == 0:
                key_level, key_identifier, key_name = row[:-1].split(',')
            else:
                value_level, value_identifier, value_name = row[:-1].split(',')

                id_ = str(i).rjust(10, '0')
                value_name = value_name[0].upper() + value_name[1::]
                hash_ = f'{value_name}_{value_identifier}'
                list_json.append({'id': id_, key_level: value_level, key_identifier: value_identifier,
                                  key_name: value_name, '—Ö–µ—à': hash_})

        json.dump(list_json, f_write, ensure_ascii=False)


if __name__ == '__main__':
    convert_to_json('my_csv.csv', 'new_json.txt')

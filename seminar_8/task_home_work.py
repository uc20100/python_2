"""
–ú–æ–¥—É–ª—å —Å–±–æ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ –∫–∞—Ç–∞–ª–æ–≥–∞—Ö
"""
# üìå –†–µ—à–∏—Ç—å –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É—Å–ø–µ–ª–∏ —Ä–µ—à–∏—Ç—å –Ω–∞ —Å–µ–º–∏–Ω–∞—Ä–µ.
# üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
# –æ–±—Ö–æ–¥–∏—Ç –µ—ë –∏ –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ö–æ–¥–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤
# —Ñ–∞–π–ª—ã json, csv –∏ pickle.
#     ‚óã –î–ª—è –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é.
#     ‚óã –î–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ —É–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª —ç—Ç–æ –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è.
#     ‚óã –î–ª—è —Ñ–∞–π–ª–æ–≤ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ —Ä–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö, –∞ –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Ä–∞–∑–º–µ—Ä
# —Ñ–∞–π–ª–æ–≤ –≤ –Ω–µ–π —Å —É—á—ë—Ç–æ–º –≤—Å–µ—Ö –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π.
# üìå –°–æ–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –Ω–∞ —É—Ä–æ–∫–µ –∏ –≤ —Ä–∞–º–∫–∞—Ö –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π
# –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤.

__all__ = ['info_folder']
if __name__ == '__main__':
    from file_func.task_6 import any_file_generator_to_folder
    from file_func.task_home_work import rename_file
    import shutil
    from pathlib import Path
    from file_func.task_7 import sort_file
import os
import json
import csv
import pickle


def info_folder(folder: str, file_json: str, file_csv: str, file_pickle: str):
    """
    –§—É–Ω–∫—Ü–∏—è —Å–æ–±–∏—Ä–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏

    :param folder: –ø–∞–ø–∫–∞ –æ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–µ–Ω –æ—Ç—á–µ—Ç
    :param file_json: —Ñ–∞–π–ª –æ—Ç—á–µ—Ç–∞ JSON
    :param file_csv: —Ñ–∞–π–ª –æ—Ç—á–µ—Ç–∞ CSV
    :param file_pickle: —Ñ–∞–π–ª –æ—Ç—á–µ—Ç–∞ pickle
    :return:
    """

    list_info = []
    for dir_path, dir_name, file_name in os.walk(Path.cwd() / folder):
        for dir_ in dir_name:
            size_dir = os.path.getsize(f'{dir_path}\\{dir_}')
            list_info.append({'parent_folder': dir_path, 'type_obj': 'folder', 'size_obj': size_dir})
        for file_ in file_name:
            size_file = os.path.getsize(f'{dir_path}\\{file_}')
            list_info.append({'parent_folder': dir_path, 'type_obj': 'file', 'size_obj': size_file})
        with (open(file_json, 'w', encoding='utf-8') as f_json,
              open(file_csv, 'w', newline='', encoding='utf-8') as f_csv,
              open(file_pickle, 'wb') as f_pickle):
            json.dump(list_info, f_json, ensure_ascii=False)
            csv_write = csv.writer(f_csv, dialect='excel', delimiter=',', quotechar='|', quoting=csv.QUOTE_MINIMAL)
            csv_write.writerow(list(list_info[0].keys()))
            for item in list_info:
                csv_write.writerow(list(item.values()))
            pickle.dump(list_info, f_pickle)


if __name__ == '__main__':
    folder_ = 'test_folder\\other\\NoName\\–ø–∞–ø–∫–∞'

    # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    del_folder, *_ = folder_.split('\\')
    p = Path(Path().cwd())
    for obj in p.iterdir():
        if obj == Path(Path().cwd() / del_folder) and obj.is_dir():
            shutil.rmtree(Path().cwd() / del_folder)
            break
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏
    list_f = folder_.split('\\')
    str_f = ''
    for f in list_f:
        str_f += f'{f}\\'
        Path(Path().cwd() / str_f).mkdir()
    # –ì–µ–Ω–µ—Ä–∏–º —Ä–∞–Ω–¥–æ–º–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ –∑–∞–¥–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
    file_dict = dict(txt=3, doc=1, pdf=2)
    any_file_generator_to_folder(folder_, **file_dict)
    # –î–µ–ª–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–∞–º
    for key_dict in file_dict:
        rename_file(folder=folder_, type_file_original=key_dict, name='file_', n_digits=5)
    # –†–∞—Å–∫–∏–¥—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã –ø–æ —Ä–∞–∑–Ω—ã–º –ø–∞–ø–∫–∞–º
    folder_dict = dict(–í–∏–¥–µ–æ=['avi', 'mp4'], –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è=['bmp', 'jpg', 'png'], –î–æ–∫—É–º–µ–Ω—Ç—ã=['doc', 'exl', 'pdf'])
    sort_file(folder_, **folder_dict)

    info_folder('test_folder', 't.json', 't.csv', 't.pickle')
    with (open('t.pickle', 'rb') as f_read):
        print(pickle.load(f_read))
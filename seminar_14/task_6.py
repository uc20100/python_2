# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
# üìå –ù–∞ —Å–µ–º–∏–Ω–∞—Ä–µ 13 –±—ã–ª —Å–æ–∑–¥–∞–Ω –ø—Ä–æ–µ–∫—Ç –ø–æ —Ä–∞–±–æ—Ç–µ —Å
# –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–∏–º—è, id, —É—Ä–æ–≤–µ–Ω—å).
# üìå –ù–∞–ø–∏—à–∏—Ç–µ 3-7 —Ç–µ—Å—Ç–æ–≤ pytest –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.
# üìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∏–∫—Å—Ç—É—Ä—ã.

from user import User
from us_exception import AccessException, LevelException
import pytest


@pytest.fixture
def json_data(tmp_path):
    """
    –§–∏–∫—Å—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ JSON.
    """
    f_name = tmp_path / 'user.json'
    text_json = """{"7": {"uc": "Evgeny", "vl": "Valentina", "vc": "Victor"}, "1": {"ucc": "Evgeny", "us": "user"}}"""
    with open(f_name, 'w') as f:
        f.write(text_json)
    return str(f_name)


@pytest.fixture
def user(json_data):
    """
    –§–∏–∫—Å—Ç—É—Ä–∞ –æ–±—ä–µ–∫—Ç–∞ User c –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.

    :param json_data: —Ñ–∏–∫—Å—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ JSON.
    """
    u = User()
    u.load(json_data)
    return u


def test_access_exception(user):
    """
    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ AccessException.

    :param user: –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ User.
    """
    with pytest.raises(AccessException) as e:
        user.login_system('Evgeny', 'u')
    assert str(e.value) == "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–º–µ–Ω–µ–º 'Evgeny' –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º 'u' –Ω–µ—Ç –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ"


def test_level_exception(user):
    """
    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ LevelException, –∫–æ–≥–¥–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω—å—à–µ –≤–∞—à–µ–≥–æ.

    :param user: –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ User.
    """
    with pytest.raises(LevelException) as e:
        user.login_system('Evgeny', 'uc')
        user.add_user('Jon', 'jn', 2)
    assert str(e.value) == "–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '2' –º–µ–Ω—å—à–µ –≤–∞—à–µ–≥–æ —É—Ä–æ–≤–Ω—è '7', –∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–µ–Ω"


def test_non_login_user(user):
    """
    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ LevelException, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–ª–æ–≥–∏–Ω–∏–ª—Å—è.

    :param user: –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ User.
    """
    with pytest.raises(LevelException) as e:
        user.add_user('Jon', 'jn', 2)
    assert str(e.value) == "–í—ã –Ω–µ –∑–∞–ª–æ–≥–∏–Ω–∏–ª–∏—Å—å."


def test_add_user(user):
    """
    –¢–µ—Å—Ç –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ.

    :param user: –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ User.
    """
    user.login_system('user', 'us')
    user.add_user('Jon', 'jn', 5)
    assert user.login_system('Jon', 'jn') == 5

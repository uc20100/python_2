# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
# üìå –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∑–∞–¥–∞—á–∏ 3 –∏ 4. –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å –ø—Ä–æ–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π
# –∏–º–µ–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã:
# üìå –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö (—Ñ—É–Ω–∫—Ü–∏—è –∏–∑ –∑–∞–¥–∞–Ω–∏—è 4)
# üìå –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É - —Ç—Ä–µ–±—É–µ—Ç —É–∫–∞–∑–∞—Ç—å –∏–º—è –∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –î–ª—è
# –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ
# –º–∞–≥–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
# –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, –≤—ã–∑—ã–≤–∞–π—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
# –¥–æ—Å—Ç—É–ø–∞. –ê –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å, –ø–æ–ª—É—á–∏—Ç–µ –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å –∏–∑
# –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
# üìå –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ï—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# –º–µ–Ω—å—à–µ, —á–µ–º –≤–∞—à —É—Ä–æ–≤–µ–Ω—å, –≤—ã–∑—ã–≤–∞–π—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è
# –¥–æ—Å—Ç—É–ø–∞.

import json
from us_exception import AccessException, LevelException
from us import Us


class User:
    """
    –ö–ª–∞—Å—Å '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'

     –ê—Ç—Ä–∏–±—É—Ç—ã:
    - self.set_user (set): –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ –∫–ª–∞—Å—Å–∞ Us;
    - self.your_level: –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞.

     –ú–µ—Ç–æ–¥—ã:
    - load(self, file_json: str = 'users.json'): –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç—ã –∫–ª–∞—Å—Å–∞ Us –∏–∑ —Ñ–∞–π–ª–∞ JSON;
    - login_system(self, name, identifier): –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞, –ª–∏–±–æ –æ—à–∏–±–∫—É AccessException;
    - add_user(self, name, identifier, level): –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–µ–Ω –≤–∞—à–µ–º—É, –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, –≤—ã–¥–∞–µ—Ç –æ—à–∏–±–∫—É LevelException.

     Dunder –º–µ—Ç–æ–¥—ã:
    - __init__(self): –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞;
    - __str__(self): –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞.
    """

    def __init__(self):
        self.set_user = set()
        self.your_level = None

    def __str__(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞.

        :return:
        """
        ret = ''
        for item in self.set_user:
            ret += f'id: {item.identifier}, name: {item.name}, level: {item.level}\n'
        return ret

    def load(self, file_json: str = 'users.json'):
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ, –æ–±—ä–µ–∫—Ç—ã –∫–ª–∞—Å—Å–∞ Us –∏–∑ —Ñ–∞–π–ª–∞ JSON.

        :param file_json: —Ñ–∞–π–ª JSON.
        :return:
        """
        try:
            with open(file_json, 'r', encoding='utf-8') as fj:
                try:
                    json_dict = json.load(fj)
                except json.decoder.JSONDecodeError as e:
                    raise e
        except FileNotFoundError as e:
            raise FileNotFoundError(f"–§–∞–π–ª–∞ '{file_json}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. {e}")
        for lev, item_ in json_dict.items():
            for ident, name in item_.items():
                a = Us(name, ident, lev)
                self.set_user.add(a)

    def login_system(self, name, identifier):
        """
        –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É.

        :param name: –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è;
        :param identifier: id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è;
        :return: —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞ LevelException.
        """
        variant_a = Us(name, identifier, None)
        for item in self.set_user:
            if item == variant_a:
                self.your_level = int(item.level)
                return self.your_level
        else:
            raise AccessException(name, identifier)

    def add_user(self, name, identifier, level):
        """
        –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ, –µ—Å–ª–∏ –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å –Ω–µ –º–µ–Ω—å—à–µ —á–µ–º –≤–∞—à.

        :param name: –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è;
        :param identifier: id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è;
        :param level: —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        """
        if not isinstance(level, int):
            raise ValueError("–ü–∞—Ä–∞–º–µ—Ç—Ä 'level' –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
        if not (1 <= level <= 7):
            raise ValueError("–ü–∞—Ä–∞–º–µ—Ç—Ä 'level' –¥–æ–ª–∂–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Ç 1 –¥–æ 7.")

        if self.your_level is None or level < self.your_level:
            raise LevelException(self.your_level, level)
        else:
            variant_b = Us(name, identifier, level)
            set.add(self.set_user, variant_b)


if __name__ == '__main__':
    d = User()
    d.load()
    print(d.login_system('Evgeny', 'uc'))
    d.add_user('Evgeny', 'ucr', 7)
    print(d)

# 2. –¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ —Å—É–º–º–∞ –ª—é–±—ã—Ö –¥–≤—É—Ö –µ–≥–æ —Å—Ç–æ—Ä–æ–Ω –±–æ–ª—å—à–µ —Ç—Ä–µ—Ç—å–µ–π. 
# –î–∞–Ω–æ a, b, c - —Å—Ç–æ—Ä–æ–Ω—ã –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞. 
# –¢—Ä–µ–±—É–µ—Ç—Å—è —Å—Ä–∞–≤–Ω–∏—Ç—å –¥–ª–∏–Ω—É –∫–∞–∂–¥–æ–≥–æ –æ—Ç—Ä–µ–∑–∫–∞-—Å—Ç–æ—Ä–æ–Ω—ã —Å —Å—É–º–º–æ–π –¥–≤—É—Ö –¥—Ä—É–≥–∏—Ö. 
# –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –≤ –æ–¥–Ω–æ–º —Å–ª—É—á–∞–µ –æ—Ç—Ä–µ–∑–æ–∫ –æ–∫–∞–∂–µ—Ç—Å—è –±–æ–ª—å—à–µ —Å—É–º–º—ã –¥–≤—É—Ö –¥—Ä—É–≥–∏—Ö, 
# —Ç–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å —Ç–∞–∫–∏–º–∏ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. 
# –û—Ç–¥–µ–ª—å–Ω–æ —Å–æ–æ–±—â–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Ä–∞–∑–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–º, —Ä–∞–≤–Ω–æ–±–µ–¥—Ä–µ–Ω–Ω—ã–º –∏–ª–∏ —Ä–∞–≤–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–º.

SIDE_A = 7
SIDE_B = 8
SIDE_C = 7

if SIDE_A > SIDE_B + SIDE_C or SIDE_B > SIDE_A + SIDE_C or SIDE_C > SIDE_A + SIDE_B:
    print('–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å —Ç–∞–∫–∏–º–∏ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
elif SIDE_A == SIDE_B == SIDE_C:
    print('–≠—Ç–æ —Ä–∞–≤–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫')
elif SIDE_A == SIDE_B or SIDE_A == SIDE_C or SIDE_C == SIDE_B:
    print('–≠—Ç–æ —Ä–∞–≤–Ω–æ–±–µ–¥—Ä–µ–Ω–Ω—ã–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫')
else:
    print('–≠—Ç–æ —Ä–∞–∑–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫')



# 3. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —á–∏—Å–ª–æ –∏ —Å–æ–æ–±—â–∞–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–æ –ø—Ä–æ—Å—Ç—ã–º –∏–ª–∏ —Å–æ—Å—Ç–∞–≤–Ω—ã–º. 
# –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: ‚Äú–ß–∏—Å–ª–æ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º, –µ—Å–ª–∏ –¥–µ–ª–∏—Ç—Å—è –Ω–∞—Ü–µ–ª–æ —Ç–æ–ª—å–∫–æ –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É 
# –∏ –Ω–∞ —Å–µ–±—è‚Äù. –°–¥–µ–ª–∞–π—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –≤–≤–æ–¥ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª –∏ —á–∏—Å–µ–ª –±–æ–ª—å—à–µ 100 —Ç—ã—Å—è—á. 

MIN_LIMIT = 0
MAX_LIMIT = 100_000

while True:
    user_number = int(input('–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –º–µ–Ω—å—à–µ 100 000: '))
    if MIN_LIMIT > user_number or user_number > MAX_LIMIT:
        print('–ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —á–∏—Å–ª–∞')
    else:
        break

i = 1
while i < user_number:
    if user_number % i == 0 and not i == 1:
        print('–ß–∏—Å–ª–æ —Å–æ—Å—Ç–∞–≤–Ω–æ–µ')
        break
    i += 1
else:
    if user_number == 0:
        print('–ß–∏—Å–ª–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ–µ –∏ –Ω–µ —Å–æ—Å—Ç–∞–≤–Ω–æ–µ')
    else:
        print('–ß–∏—Å–ª–æ –ø—Ä–æ—Å—Ç–æ–µ')



# 4. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 1000. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ –∑–∞ 10 –ø–æ–ø—ã—Ç–æ–∫. –ü—Ä–æ–≥—Ä–∞–º–º–∞
# –¥–æ–ª–∂–Ω–∞ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å ¬´–±–æ–ª—å—à–µ¬ª –∏–ª–∏ ¬´–º–µ–Ω—å—à–µ¬ª –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–∏. –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ
# —á–∏—Å–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–¥:  
#     from random import randint  
#     num = randint(LOWER_LIMIT, UPPER_LIMIT)

from random import randint 

LOWER_LIMIT = 0
UPPER_LIMIT = 1_000
NUMBER_OF_ATTEMPTS = 10

num = randint(LOWER_LIMIT, UPPER_LIMIT)

for i in range(1, NUMBER_OF_ATTEMPTS+1):
    user_num = int(input(f'–£–≥–∞–¥–∞–π—Ç–µ —á–∏—Å–ª–æ (–ø–æ–ø—ã—Ç–∫–∞ {i}): '))
    if num > user_num:
        print('–ù–∞–¥–æ –±–æ–ª—å—à–µ')
    elif num < user_num:
        print('–ù–∞–¥–æ –º–µ–Ω—å—à–µ')
    else:
        print('–£—Ä–∞! –í—ã —É–≥–∞–¥–∞–ª–∏')
        break
else:
    print(f'–ü–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã. –ß–∏—Å–ª–æ –±—ã–ª–æ {num}')




# -------------------------------------------------------------------------------------------------------------------------------
# –ó–ê–î–ê–ß–ò –ö–û–¢–û–†–´–ï –ù–ï –î–û–î–ï–õ–ê–õ–ò –ù–ê –°–ï–ú–ò–ù–ê–†–ï

# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ9
# üìå –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è –æ—Ç 2—Ö2 –¥–æ 9—Ö10 –∫–∞–∫ –Ω–∞ —à–∫–æ–ª—å–Ω–æ–π —Ç–µ—Ç—Ä–∞–¥–∫–µ.

print('                –¢–ê–ë–õ–ò–¶–ê –£–ú–ù–û–ñ–ï–ù–ò–Ø')
for i in range(2, 10, 4):
    for j in range(2, 10):
        for k in range(0, 4):
            print(f'{i+k} X {j} = {((i+k)*j):{2}}    ', end='')
        print('')
    print('')



# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ8
# üìå –ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –≤ –∫–æ–Ω—Å–æ–ª–∏ —ë–ª–∫—É —Å–ø—Ä–æ—Å–∏–≤
# —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—è–¥–æ–≤.

spruce_rows = int(input('–ó–∞–¥–∞–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—è–¥–æ–≤ –µ–ª–∫–∏: '))

for i in range(1, spruce_rows*2, 2):
    for _ in range(((spruce_rows*2)-i)//2):
        print(' ', end='')
    for _ in range(i):
        print('*', end='')
    print('')



# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ7
# üìå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 999. –ò—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —á–∏—Å–ª–∞–º–∏
# —Å–æ–æ–±—â–∏—Ç–µ —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ: —Ü–∏—Ñ—Ä–∞, –¥–≤—É–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ –∏–ª–∏ —Ç—Ä—ë—Ö–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ.
# üìå –î–ª—è —Ü–∏—Ñ—Ä—ã –≤–µ—Ä–Ω–∏—Ç–µ –µ—ë –∫–≤–∞–¥—Ä–∞—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä 5 - 25
# üìå –î–ª—è –¥–≤—É–∑–Ω–∞—á–Ω–æ–≥–æ —á–∏—Å–ª–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä, –Ω–∞–ø—Ä–∏–º–µ—Ä 30 - 0
# üìå –î–ª—è —Ç—Ä—ë—Ö–∑–Ω–∞—á–Ω–æ–≥–æ —á–∏—Å–ª–∞ –µ–≥–æ –∑–µ—Ä–∫–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä 520 - 25
# üìå –ï—Å–ª–∏ —á–∏—Å–ª–æ –Ω–µ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞, –∑–∞–ø—Ä–æ—Å–∏—Ç–µ –Ω–æ–≤–æ–µ —á–∏—Å–ª–æ
# üìå –û—Ç–∫–∞–∂–∏—Ç–µ—Å—å –æ—Ç –º–∞–≥–∏—á–µ—Å–∫–∏—Ö —á–∏—Å–µ–ª
# üìå –í –∫–æ–¥–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–¥–∏–Ω input –∏ –æ–¥–∏–Ω print

MIN_NUMBER = 1
MAX_NUMBER = 999
SQUARE = 1
MULTIPLICATION = 2

while True:
    user_number_str = input(f'–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç {MIN_NUMBER} –¥–æ {MAX_NUMBER}: ')
    if MIN_NUMBER <= int(user_number_str) <= MAX_NUMBER:
        break

if len(user_number_str) == SQUARE:
    result_value = f'–ö–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞ {user_number_str} = {int(user_number_str)**2}'
elif len(user_number_str) == MULTIPLICATION:
    result_value = f'–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä —á–∏—Å–ª–∞ {user_number_str} = {int(user_number_str[0])*int(user_number_str[1])}'
else:
    new_number = ''
    new_number += user_number_str[2]
    new_number += user_number_str[1]
    new_number += user_number_str[0]
    result_value = f'–ó–µ—Ä–∫–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–∏—Å–ª–∞ {user_number_str} = {new_number}'
print(result_value)
        
   

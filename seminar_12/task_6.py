# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
# üìå –ò–∑–º–µ–Ω—è–µ–º –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.
# üìå –ó–∞–º–µ–Ω—è–µ–º –ø–∞—Ä—É –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏—Ö –¥–ª–∏–Ω—É –∏ —à–∏—Ä–∏–Ω—É
# –Ω–∞ –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π —Ä–∞–∑–º–µ—Ä–∞.

class Value:
    """
    –î–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ Rectangle.

     Dunder –º–µ—Ç–æ–¥—ã:
    - __set_name__(self, owner, name): –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Ç—Ä–∏–±—É—Ç–∞ –∫–ª–∞—Å—Å–∞,
    - __set__(self, instance, value): –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –∑–∞–¥–∞–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç—É –∫–ª–∞—Å—Å–∞,
    - __get__(self, instance, owner): –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –∞—Ç—Ä–∏–±—É—Ç—É –∫–ª–∞—Å—Å–∞.

     –§—É–Ω–∫—Ü–∏–∏:
    - validate(value): –≤–∞–ª–∏–¥–∞—Ü–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞ –∫–ª–∞—Å—Å–∞.
    """

    def __set_name__(self, owner, name):
        """
        –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Ç—Ä–∏–±—É—Ç–∞ –∫–ª–∞—Å—Å–∞.

        :param owner:
        :param name:
        :return:
        """
        self.param_name = '_' + name

    def __set__(self, instance, value):
        """
        –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –∑–∞–¥–∞–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç—É –∫–ª–∞—Å—Å–∞.

        :param instance:
        :param value:
        :return:
        """
        self.validate(value)
        setattr(instance, self.param_name, value)

    def __get__(self, instance, owner):
        """
        –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –∞—Ç—Ä–∏–±—É—Ç—É –∫–ª–∞—Å—Å–∞.

        :param instance:
        :param owner:
        :return:
        """
        return getattr(instance, self.param_name)

    @staticmethod
    def validate(value):
        """
        –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞.

        :param value:
        :return:
        """
        if value is not None and value <= 0:
            raise ValueError('–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è')


class Rectangle:
    """
    –ö–ª–∞—Å—Å, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫.

     –ê—Ç—Ä–∏–±—É—Ç—ã:
    - width (int): —à–∏—Ä–∏–Ω–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞,
    - length (int): –¥–ª–∏–Ω–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

     –ú–µ—Ç–æ–¥—ã:
    - perimeter(): –≤—ã—á–∏—Å–ª—è–µ—Ç –ø–µ—Ä–∏–º–µ—Ç—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞,
    - area(): –≤—ã—á–∏—Å–ª—è–µ—Ç –ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

     Dunder –º–µ—Ç–æ–¥—ã:
    - __add__(other): –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é —Å–ª–æ–∂–µ–Ω–∏—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤,
    - __sub__(other): –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é –≤—ã—á–∏—Ç–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –∏–∑ –¥—Ä—É–≥–æ–≥–æ,
    - __lt__(other): –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é "–º–µ–Ω—å—à–µ" –¥–ª—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤,
    - __eq__(other): –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é "—Ä–∞–≤–Ω–æ" –¥–ª—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤,
    - __le__(other): –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é "–º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ" –¥–ª—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤,
    - __str__(): –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞,
    - __repr__(): –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞.

    """
    # –≠–∫–æ–Ω–æ–º–∏–º –ø–∞–º—è—Ç—å
    # __slots__ = ('_length', '_width')
    length = Value()
    width = Value()

    def __init__(self, length, width=None):
        self.length = length
        self.width = width

    def perimeter(self):
        """
        –í—ã—á–∏—Å–ª—è–µ—Ç –ø–µ—Ä–∏–º–µ—Ç—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

        :return: –ø–µ—Ä–∏–º–µ—Ç—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        """
        if self.width is None:
            return 4 * self.length
        else:
            return 2 * (self.length + self.width)

    def area(self):
        """
        –í—ã—á–∏—Å–ª—è–µ—Ç –ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

        :return: –ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        """
        if self.width is None:
            return self.length ** 2
        else:
            return self.length * self.width

    def __add__(self, other):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é —Å–ª–æ–∂–µ–Ω–∏—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.

        :param other: –≤—Ç–æ—Ä–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ (Rectangle)
        :return: –Ω–æ–≤—ã–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø—É—Ç–µ–º —Å–ª–æ–∂–µ–Ω–∏—è –¥–≤—É—Ö –∏—Å—Ö–æ–¥–Ω—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤
        """
        if self.width is None:
            s_width = self.length
        else:
            s_width = self.width
        if other._width is None:
            o_width = other._length
        else:
            o_width = other._width
        if (self.length + other.length) == (s_width + o_width):
            return Rectangle((self.length + other.length), None)
        else:
            return Rectangle((self.length + other.length), (s_width + o_width))

    def __sub__(self, other):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é –≤—ã—á–∏—Ç–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –∏–∑ –¥—Ä—É–≥–æ–≥–æ.

        :param other: –≤—ã—á–∏—Ç–∞–µ–º—ã–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ (Rectangle)
        :return: –Ω–æ–≤—ã–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø—É—Ç–µ–º –≤—ã—á–∏—Ç–∞–Ω–∏—è –≤—ã—á–∏—Ç–∞–µ–º–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ
        """
        if self.width is None:
            s_width = self.length
        else:
            s_width = self.width
        if other._width is None:
            o_width = other._length
        else:
            o_width = other._width
        if abs(self.length - other.length) == abs(s_width - o_width):
            return Rectangle(abs(self.length - other.length), None)
        else:
            return Rectangle(abs(self.length - other.length), abs(s_width - o_width))

    def __eq__(self, other):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é "—Ä–∞–≤–Ω–æ" –¥–ª—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.

        :param other: –≤—Ç–æ—Ä–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ (Rectangle)
        :return: True, –µ—Å–ª–∏ —Ä–∞–≤–Ω—ã, –∏–Ω–∞—á–µ False
        """
        return self.length == other.length and self.perimeter() == other.perimeter()

    def __lt__(self, other):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é "–º–µ–Ω—å—à–µ" –¥–ª—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.

        :param other: –≤—Ç–æ—Ä–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ (Rectangle)
        :return: True, –µ—Å–ª–∏ –ø–µ—Ä–∏–º–µ—Ç—Ä –ø–µ—Ä–≤–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –º–µ–Ω—å—à–µ –ø–µ—Ä–∏–º–µ—Ç—Ä–∞ –≤—Ç–æ—Ä–æ–≥–æ, –∏–Ω–∞—á–µ False
        """
        return self.perimeter() < other.perimeter()

    def __le__(self, other):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é "–º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ" –¥–ª—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.

        :param other: –≤—Ç–æ—Ä–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ (Rectangle)
        :return: True, –µ—Å–ª–∏ –ø–µ—Ä–∏–º–µ—Ç—Ä –ø–µ—Ä–≤–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ –ø–µ—Ä–∏–º–µ—Ç—Ä—É –≤—Ç–æ—Ä–æ–≥–æ, –∏–Ω–∞—á–µ False
        """
        return self.perimeter() <= other.perimeter()

    def __str__(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

        :return: —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        """
        if self.width is None:
            return f'–ö–≤–∞–¥—Ä–∞—Ç —Å–æ —Å—Ç–æ—Ä–æ–Ω–æ–π {self.length}'
        else:
            return f'–ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ {self.length} –∏ {self.width}'

    def __repr__(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞.

        :return: —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        """
        return f'{Rectangle.__name__}({self.length}, {self.width})'


if __name__ == '__main__':
    rect1 = Rectangle(4, 5)
    rect2 = Rectangle(3)

    print(rect1)
    print(rect2)

    print(rect1.perimeter())
    print(rect1.area())
    print(rect2.perimeter())
    print(rect2.area())

    print('\n–°–ª–æ–∂–µ–Ω–∏–µ:')
    rect_sum = rect1 + rect2
    print(rect1)
    print(rect2)
    print(rect_sum)

    print('\n–í—ã—á–∏—Ç–∞–Ω–∏–µ:')
    rect_diff = rect1 - rect2
    print(rect1)
    print(rect2)
    print(rect_diff)
    print()

    print(rect1 < rect2)
    print(rect1 == rect2)
    print(rect1 <= rect2)

    print(repr(rect1))
    print(repr(rect2))

    print(rect1.__dict__)
    print(rect2.__dict__)
    print(rect1)
    print(rect2)

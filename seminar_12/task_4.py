# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ4
# üìå –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏–∑ –ø—Ä–æ—à–ª—ã—Ö —Å–µ–º–∏–Ω–∞—Ä–æ–≤.
# üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω—è—Ç—å –¥–ª–∏–Ω—É –∏ —à–∏—Ä–∏–Ω—É
# –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –∏ –≤—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
# (–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö).
# üìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã —Å–≤–æ–π—Å—Ç–≤.

class Rectangle:
    """
    –ö–ª–∞—Å—Å, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫.

     –ê—Ç—Ä–∏–±—É—Ç—ã:
    - _width (int): —à–∏—Ä–∏–Ω–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞,
    - _length (int): –¥–ª–∏–Ω–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

     –ú–µ—Ç–æ–¥—ã:
    - perimeter(): –≤—ã—á–∏—Å–ª—è–µ—Ç –ø–µ—Ä–∏–º–µ—Ç—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞,
    - area(): –≤—ã—á–∏—Å–ª—è–µ—Ç –ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

     Dunder –º–µ—Ç–æ–¥—ã:
    - __add__(other): –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é —Å–ª–æ–∂–µ–Ω–∏—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤,
    - __sub__(other): –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é –≤—ã—á–∏—Ç–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –∏–∑ –¥—Ä—É–≥–æ–≥–æ,
    - __lt__(other): –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é "–º–µ–Ω—å—à–µ" –¥–ª—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤,
    - __eq__(other): –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é "—Ä–∞–≤–Ω–æ" –¥–ª—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤,
    - __le__(other): –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é "–º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ" –¥–ª—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤,
    - __str__(): –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞,
    - __repr__(): –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞.

     –î–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã —Å–≤–æ–π—Å—Ç–≤:
    - @property length(self): –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞,
    - @property width(self): –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —à–∏—Ä–∏–Ω—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞,
    - @length.setter length(self, value): –∑–∞–¥–∞–µ—Ç –¥–ª–∏–Ω—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞,
    - @width.setter width(self, value): –∑–∞–¥–∞–µ—Ç —à–∏—Ä–∏–Ω—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.
    """

    def __init__(self, length, width=None):
        self._length = length
        self._width = width

    def perimeter(self):
        """
        –í—ã—á–∏—Å–ª—è–µ—Ç –ø–µ—Ä–∏–º–µ—Ç—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

        :return: –ø–µ—Ä–∏–º–µ—Ç—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        """
        if self._width is None:
            return 4 * self._length
        else:
            return 2 * (self._length + self._width)

    def area(self):
        """
        –í—ã—á–∏—Å–ª—è–µ—Ç –ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

        :return: –ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        """
        if self._width is None:
            return self._length ** 2
        else:
            return self._length * self._width

    def __add__(self, other):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é —Å–ª–æ–∂–µ–Ω–∏—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.

        :param other: –≤—Ç–æ—Ä–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ (Rectangle)
        :return: –Ω–æ–≤—ã–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø—É—Ç–µ–º —Å–ª–æ–∂–µ–Ω–∏—è –¥–≤—É—Ö –∏—Å—Ö–æ–¥–Ω—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤
        """
        if self._width is None:
            s_width = self._length
        else:
            s_width = self._width
        if other._width is None:
            o_width = other._lenght
        else:
            o_width = other._width
        if (self._length + other._length) == (s_width + o_width):
            return Rectangle((self._length + other._length), None)
        else:
            return Rectangle((self._length + other._length), (s_width + o_width))

    def __sub__(self, other):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é –≤—ã—á–∏—Ç–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –∏–∑ –¥—Ä—É–≥–æ–≥–æ.

        :param other: –≤—ã—á–∏—Ç–∞–µ–º—ã–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ (Rectangle)
        :return: –Ω–æ–≤—ã–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø—É—Ç–µ–º –≤—ã—á–∏—Ç–∞–Ω–∏—è –≤—ã—á–∏—Ç–∞–µ–º–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ
        """
        if self._width is None:
            s_width = self._length
        else:
            s_width = self._width
        if other._width is None:
            o_width = other._lenght
        else:
            o_width = other._width
        if abs(self._length - other._length) == abs(s_width - o_width):
            return Rectangle(abs(self._length - other._length), None)
        else:
            return Rectangle(abs(self._length - other._length), abs(s_width - o_width))

    def __eq__(self, other):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é "—Ä–∞–≤–Ω–æ" –¥–ª—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.

        :param other: –≤—Ç–æ—Ä–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ (Rectangle)
        :return: True, –µ—Å–ª–∏ —Ä–∞–≤–Ω—ã, –∏–Ω–∞—á–µ False
        """
        return self._length == other._length and self.perimeter() == other.perimeter()

    def __lt__(self, other):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é "–º–µ–Ω—å—à–µ" –¥–ª—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.

        :param other: –≤—Ç–æ—Ä–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ (Rectangle)
        :return: True, –µ—Å–ª–∏ –ø–µ—Ä–∏–º–µ—Ç—Ä –ø–µ—Ä–≤–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –º–µ–Ω—å—à–µ –ø–µ—Ä–∏–º–µ—Ç—Ä–∞ –≤—Ç–æ—Ä–æ–≥–æ, –∏–Ω–∞—á–µ False
        """
        return self.perimeter() < other.perimeter()

    def __le__(self, other):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é "–º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ" –¥–ª—è –¥–≤—É—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤.

        :param other: –≤—Ç–æ—Ä–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ (Rectangle)
        :return: True, –µ—Å–ª–∏ –ø–µ—Ä–∏–º–µ—Ç—Ä –ø–µ—Ä–≤–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ –ø–µ—Ä–∏–º–µ—Ç—Ä—É –≤—Ç–æ—Ä–æ–≥–æ, –∏–Ω–∞—á–µ False
        """
        return self.perimeter() <= other.perimeter()

    def __str__(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

        :return: —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        """
        if self._width is None:
            return f'–ö–≤–∞–¥—Ä–∞—Ç —Å–æ —Å—Ç–æ—Ä–æ–Ω–æ–π {self._length}'
        else:
            return f'–ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ {self._length} –∏ {self._width}'

    def __repr__(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞.

        :return: —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        """
        return f'{Rectangle.__name__}({self._length}, {self._width})'

    @property
    def length(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

        :return: –¥–ª–∏–Ω–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        """
        return self._length

    @property
    def width(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —à–∏—Ä–∏–Ω—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

        :return: —à–∏—Ä–∏–Ω–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        """
        return self._width

    @length.setter
    def length(self, value):
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–ª–∏–Ω—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

        :param value: –¥–ª–∏–Ω–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        :return:
        """
        if value > 0:
            self.length = value
        else:
            raise ValueError('–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è')

    @width.setter
    def width(self, value):
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —à–∏—Ä–∏–Ω—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

        :param value: —à–∏—Ä–∏–Ω–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
        :return:
        """
        if value > 0:
            self._length = value
        else:
            raise ValueError('–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è')


if __name__ == '__main__':
    rect1 = Rectangle(4, 5)
    rect2 = Rectangle(3, 3)

    print(rect1)
    print(rect2)

    print(rect1.perimeter())
    print(rect1.area())
    print(rect2.perimeter())
    print(rect2.area())

    rect_sum = rect1 + rect2
    rect_diff = rect1 - rect2

    print(rect_sum)
    print(rect_diff)

    print(rect1 < rect2)
    print(rect1 == rect2)
    print(rect1 <= rect2)

    print(repr(rect1))
    print(repr(rect2))

    print(rect1.width)
    rect1.length = 0


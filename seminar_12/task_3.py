# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ3
# üìå –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä.
# üìå –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–µ–Ω –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ –≤
# –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç start –¥–æ stop —Å —à–∞–≥–æ–º step.
# üìå –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, —Å—á–∏—Ç–∞–µ–º step=1.
# üìå –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä, —Ç–∞–∫–∂–µ —Å—á–∏—Ç–∞–µ–º start=1.

class Value:
    """
        –î–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ Generator.

         Dunder –º–µ—Ç–æ–¥—ã:
         __set_name__(self, owner, name): –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Ç—Ä–∏–±—É—Ç–∞ –∫–ª–∞—Å—Å–∞.
         __set__(self, instance, value): –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –∑–∞–¥–∞–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç—É –∫–ª–∞—Å—Å–∞.
         __get__(self, instance, owner): –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –∞—Ç—Ä–∏–±—É—Ç—É –∫–ª–∞—Å—Å–∞.

        –§—É–Ω–∫—Ü–∏–∏:
        validate(value): –≤–∞–ª–∏–¥–∞—Ü–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞ –∫–ª–∞—Å—Å–∞.
        """

    def __set_name__(self, owner, name):
        """
        –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Ç—Ä–∏–±—É—Ç–∞ –∫–ª–∞—Å—Å–∞.

        :param owner:
        :param name:
        :return:
        """
        self.param_name = '_' + name

    def __set__(self, instance, value):
        """
        –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –∑–∞–¥–∞–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç—É –∫–ª–∞—Å—Å–∞.

        :param instance:
        :param value:
        :return:
        """
        self.validate(value)
        setattr(instance, self.param_name, value)

    def __get__(self, instance, owner):
        """
        –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –∞—Ç—Ä–∏–±—É—Ç—É –∫–ª–∞—Å—Å–∞.

        :param instance:
        :param owner:
        :return:
        """
        return getattr(instance, self.param_name)

    @staticmethod
    def validate(value):
        """
        –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞.

        :param value:
        :return:
        """
        if not isinstance(value, int):
            raise TypeError(f'–ó–Ω–∞—á–µ–Ω–∏–µ {value} –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º')
        if value is not None and value < 1:
            raise ValueError(f'–ó–Ω–∞—á–µ–Ω–∏–µ {value} –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 1')


class Generator:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–Ω–∞—á–µ–Ω–∏–π —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞.

    –ê—Ç—Ä–∏–±—É—Ç—ã:
    stop (int): –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–ª–∞
    start (int): –∫–æ–Ω–µ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–ª–∞
    step (int): —à–∞–≥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏

    Dunder –º–µ—Ç–æ–¥—ã:
    __iter__(self): –∏—Ç–µ—Ä–∞—Ç–æ—Ä –æ–±—ä–µ–∫—Ç–∞.
    __next__(self): —à–∞–≥ –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞.
    """

    stop = Value()
    start = Value()
    step = Value()

    def __init__(self, stop: int, start: int = 1, step: int = 1):
        self.stop = stop
        self.start = start
        self.step = step
        self._count = start

    def __iter__(self):
        """
        –§—É–Ω–∫—Ü–∏—è –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞ –æ–±—ä–µ–∫—Ç–∞.

        :return:
        """
        return self

    def __next__(self):
        """
        –§—É–Ω–∫—Ü–∏—è —à–∞–≥–∞ –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞.

        :return:
        """
        while self._count <= self.stop:
            factorial = 1
            for _i in range(1, self._count + 1):
                factorial *= _i
            print(f'–§–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞: {self._count}, —Ä–∞–≤–µ–Ω: {factorial:_}')
            self._count += self.step
            return factorial
        raise StopIteration


if __name__ == '__main__':
    gen = Generator(10, 2, 2)
    for i in gen:
        print(f'–ó–Ω–∞—á–µ–Ω–∏–µ –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞: {i:_}')

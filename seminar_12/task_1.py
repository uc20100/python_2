# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ1
# üìå –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å-—Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç–∞–µ—Ç —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ –ø—Ä–∏
# –≤—ã–∑–æ–≤–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
# üìå –≠–∫–∑–µ–º–ø–ª—è—Ä –¥–æ–ª–∂–µ–Ω –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ k –∑–Ω–∞—á–µ–Ω–∏–π.
# üìå –ü–∞—Ä–∞–º–µ—Ç—Ä k –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
# üìå –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞–Ω–µ–µ –≤—ã–∑—ã–≤–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏
# –∏—Ö —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–æ–≤.


class Factorial:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π.

     –ê—Ç—Ä–∏–±—É—Ç—ã:
    - k_value (int): –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ö—Ä–∞–Ω—è—â–∏—Ö—Å—è –≤ –ø–∞–º—è—Ç–∏,
    - factorial_dict (dict): –∏—Å—Ç–æ—Ä–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π.

     Dunder –º–µ—Ç–æ–¥—ã:
    - __str__(): –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π,
    - __repr__(): –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫–ª–∞—Å—Å–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏,
    - __call__(self, number): –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π.

    """

    def __init__(self, k_value: int):
        self.k_value = k_value
        self.factorial_dict = {}

    def __call__(self, number):
        """
        –§—É–Ω–∫—Ü–∏—è —Å—á–∏—Ç–∞–µ—Ç —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª.

        :param number: —á–∏—Å–ª–æ –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–µ–Ω —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª
        :return:
        """
        factorial = 1
        if number < 0:
            raise ValueError('–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å > 0')
        if number > 1:
            for i in range(1, number + 1):
                factorial *= i
        self.factorial_dict[number] = factorial
        if len(self.factorial_dict) > self.k_value:
            key_item = iter(self.factorial_dict.keys())
            self.factorial_dict.pop(next(key_item))

    def __str__(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π.

        :return:
        """
        return '\n'.join([f'–ß–∏—Å–ª–æ: {item[0]}, –§–∞–∫—Ç–æ—Ä–∏–∞–ª: {item[1]}' for item in self.factorial_dict.items()])


if __name__ == '__main__':
    value_1 = Factorial(5)
    value_1(7)
    value_1(0)
    value_1(1)
    value_1(2)
    value_1(3)
    value_1(4)
    value_1(5)
    value_1(6)
    value_1(10)
    print(value_1)

    print()
    value_2 = Factorial(3)
    value_2(0)
    value_2(1)
    value_2(2)
    value_2(3)
    value_2(4)
    value_2(5)
    print(value_2)

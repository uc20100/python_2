# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
# üìå –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥
# –ø—É—Ç—å –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ –ü–ö.
# üìå –°–æ–±–µ—Ä–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–æ–≤ namedtuple.
# üìå –ö–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç —Ö—Ä–∞–Ω–∏—Ç:
# ‚óã –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞,
# ‚óã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ, –µ—Å–ª–∏ —ç—Ç–æ —Ñ–∞–π–ª,
# ‚óã —Ñ–ª–∞–≥ –∫–∞—Ç–∞–ª–æ–≥–∞,
# ‚óã –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞.
# üìå –í –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–±–æ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∏—Å–ø–æ–ª—å–∑—É—è
# –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.


from pathlib import Path
import os
from collections import namedtuple
import logging
import argparse

logging.basicConfig(format='{levelname:<8} {msg}',
                    style='{',
                    filename='info_folder.txt',
                    filemode='w',
                    encoding='utf-8',
                    level=logging.INFO)

logger_val = logging.getLogger(__name__)


def info_folder(folder: str):
    """
    –§—É–Ω–∫—Ü–∏—è —Å–æ–±–∏—Ä–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.

    :param folder: –ü–∞–ø–∫–∞ –æ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–µ–Ω –æ—Ç—á–µ—Ç
    :return:
    """

    FolderInfo = namedtuple('FolderInfo', ['name_file_or_folder', 'parent_folder',
                                           'size', 'type_file', 'flag_folder'], defaults=['', '', 0, 'no_type', True])
    list_namedtuple = []
    list_path = []

    for dir_path, *_ in os.walk(Path.cwd() / folder):
        list_path.append(dir_path)
    for path_ in list_path:
        size_dir = 0
        for path_file, _, file_mame in os.walk(path_):
            for f_name in file_mame:
                size_dir += os.path.getsize(f'{path_file}\\{f_name}')
        *_, dir_name = path_.split('\\')
        len_dir_name = len(dir_name) + 1
        p_folder = str(path_)[:-len_dir_name]
        list_namedtuple.append(FolderInfo(dir_name, p_folder, size_dir))

    for path_, _, fl_name in os.walk(Path.cwd() / folder):
        for fl in fl_name:
            size_fl = os.path.getsize(f'{path_}\\{fl}')
            try:
                file_mame_, file_type = fl.split('.')
            except ValueError:
                file_mame_ = fl
                file_type = 'no_type'
            list_namedtuple.append(FolderInfo(file_mame_, path_, size_fl, file_type,  False))

    max_len_name_file_or_folder = 0
    max_len_parent_folder = 0
    max_len_type_file = 0
    max_len_flag_folder = 0
    max_len_size = 0
    for item in list_namedtuple:
        if max_len_name_file_or_folder < len(item.name_file_or_folder):
            max_len_name_file_or_folder = len(item.name_file_or_folder)
        if max_len_parent_folder < len(item.parent_folder):
            max_len_parent_folder = len(item.parent_folder)
        if max_len_type_file < len(item.type_file):
            max_len_type_file = len(item.type_file)
        if max_len_flag_folder < len(str(item.flag_folder)):
            max_len_flag_folder = len(str(item.flag_folder))
        if max_len_size < len(str(item.size)):
            max_len_size = len(str(item.size))

    for item in list_namedtuple:
        logger_val.info(f'parent_folder: {item.parent_folder:<{max_len_parent_folder + 1}}, '
                        f'name: {item.name_file_or_folder:<{max_len_name_file_or_folder + 1}}, '
                        f'folder_flag: {str(item.flag_folder):<{max_len_flag_folder + 1}}, '
                        f'type_file: {item.type_file:<{max_len_type_file + 1}}, '
                        f'size: {item.size:<{max_len_size + max_len_size // 3 + 1}_} –±–∞–π—Ç')


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='–§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏')
    parser.add_argument('-scan_folder', metavar='scan_folder', type=str,
                        help='–ø—É—Ç—å –∫ –ø–∞–ø–∫–µ –æ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–µ–Ω –æ—Ç—á–µ—Ç', default=str(Path.cwd()))
    args = parser.parse_args()

    # –°–æ–∑–¥–∞—ë–º –æ—Ç—á—ë—Ç—ã –æ —Ñ–∞–π–ª–∞—Ö –∏ –∫–∞—Ç–∞–ª–æ–≥–∞—Ö
    info_folder(args.scan_folder)

    # –ó–∞–ø—É—Å–∫ –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    # python task_6.py -scan_folder C:\Users\uc201\Desktop\GlonassGpsService
    # –û–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    # python task_6.py --help
